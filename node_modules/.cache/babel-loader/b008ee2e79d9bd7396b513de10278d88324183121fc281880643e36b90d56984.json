{"ast":null,"code":"const express = require('express');\nconst cors = require('cors');\nconst fs = require('fs');\nconst path = require('path');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst PORT = 5000;\napp.use(cors());\napp.use(bodyParser.json());\napp.post('/api/contact', (req, res) => {\n  const {\n    name,\n    email,\n    service,\n    message\n  } = req.body;\n  if (!name || !email || !service || !message) {\n    return res.status(400).json({\n      error: 'Vui lÃ²ng nháº­p Ä‘áº§y Ä‘á»§ thÃ´ng tin'\n    });\n  }\n  const contact = {\n    name,\n    email,\n    service,\n    message,\n    timestamp: new Date().toISOString()\n  };\n  const filePath = path.join(__dirname, 'contacts.json');\n  let contacts = [];\n  if (fs.existsSync(filePath)) {\n    contacts = JSON.parse(fs.readFileSync(filePath));\n  }\n  contacts.push(contact);\n  fs.writeFileSync(filePath, JSON.stringify(contacts, null, 2));\n  res.status(200).json({\n    message: 'LiÃªn há»‡ Ä‘Ã£ Ä‘Æ°á»£c ghi nháº­n!'\n  });\n});\napp.listen(PORT, () => {\n  console.log(`ðŸš€ Server Ä‘ang cháº¡y táº¡i http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","fs","path","bodyParser","app","PORT","use","json","post","req","res","name","email","service","message","body","status","error","contact","timestamp","Date","toISOString","filePath","join","__dirname","contacts","existsSync","JSON","parse","readFileSync","push","writeFileSync","stringify","listen","console","log"],"sources":["C:/Users/PC/Desktop/ads-dev-bootstrap/src/index.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst fs = require('fs');\nconst path = require('path');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst PORT = 5000;\n\napp.use(cors());\napp.use(bodyParser.json());\n\napp.post('/api/contact', (req, res) => {\n  const { name, email, service, message } = req.body;\n\n  if (!name || !email || !service || !message) {\n    return res.status(400).json({ error: 'Vui lÃ²ng nháº­p Ä‘áº§y Ä‘á»§ thÃ´ng tin' });\n  }\n\n  const contact = {\n    name,\n    email,\n    service,\n    message,\n    timestamp: new Date().toISOString()\n  };\n\n  const filePath = path.join(__dirname, 'contacts.json');\n  let contacts = [];\n\n  if (fs.existsSync(filePath)) {\n    contacts = JSON.parse(fs.readFileSync(filePath));\n  }\n\n  contacts.push(contact);\n  fs.writeFileSync(filePath, JSON.stringify(contacts, null, 2));\n\n  res.status(200).json({ message: 'LiÃªn há»‡ Ä‘Ã£ Ä‘Æ°á»£c ghi nháº­n!' });\n});\n\napp.listen(PORT, () => {\n  console.log(`ðŸš€ Server Ä‘ang cháº¡y táº¡i http://localhost:${PORT}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAMK,GAAG,GAAGN,OAAO,CAAC,CAAC;AACrB,MAAMO,IAAI,GAAG,IAAI;AAEjBD,GAAG,CAACE,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC;AACfI,GAAG,CAACE,GAAG,CAACH,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;AAE1BH,GAAG,CAACI,IAAI,CAAC,cAAc,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGL,GAAG,CAACM,IAAI;EAElD,IAAI,CAACJ,IAAI,IAAI,CAACC,KAAK,IAAI,CAACC,OAAO,IAAI,CAACC,OAAO,EAAE;IAC3C,OAAOJ,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAAC;MAAEU,KAAK,EAAE;IAAiC,CAAC,CAAC;EAC1E;EAEA,MAAMC,OAAO,GAAG;IACdP,IAAI;IACJC,KAAK;IACLC,OAAO;IACPC,OAAO;IACPK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC;EAED,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAACC,SAAS,EAAE,eAAe,CAAC;EACtD,IAAIC,QAAQ,GAAG,EAAE;EAEjB,IAAIxB,EAAE,CAACyB,UAAU,CAACJ,QAAQ,CAAC,EAAE;IAC3BG,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAAC3B,EAAE,CAAC4B,YAAY,CAACP,QAAQ,CAAC,CAAC;EAClD;EAEAG,QAAQ,CAACK,IAAI,CAACZ,OAAO,CAAC;EACtBjB,EAAE,CAAC8B,aAAa,CAACT,QAAQ,EAAEK,IAAI,CAACK,SAAS,CAACP,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAE7Df,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAAC;IAAEO,OAAO,EAAE;EAA4B,CAAC,CAAC;AAChE,CAAC,CAAC;AAEFV,GAAG,CAAC6B,MAAM,CAAC5B,IAAI,EAAE,MAAM;EACrB6B,OAAO,CAACC,GAAG,CAAC,4CAA4C9B,IAAI,EAAE,CAAC;AACjE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}